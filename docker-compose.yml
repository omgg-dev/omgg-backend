services:

  strapiDev:
    container_name: omggWebsiteStrapiDev
    build:
      context: .
      dockerfile: Dockerfile
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - "${PORT}:${PORT}"
    networks:
      - strapi
    depends_on:
      - postgresql

  strapiProd:
    container_name: omggWebsiteStrapiProd
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: strapi:latest
    restart: unless-stopped
    env_file: .env.prod
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      - ./.env.prod:/opt/app/.env.prod
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - "${PORT}:${PORT}"
    networks:
      - strapi
    depends_on:
      - postgresql

  postgresql:
    container_name: omggWebsitePostgresql
    platform: linux/amd64 # For platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env.prod
    image: postgres:16.0-alpine
    environment: # Not sure it is necessary to specify the env variables here 
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes: # Specify Host path : Container path (data are persistent in host path, not in container path)
      - postgresData:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    networks:
      - strapi

volumes:
  postgresData:

networks:
  strapi:
    name: strapi
    driver: bridge