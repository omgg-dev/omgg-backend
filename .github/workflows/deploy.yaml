name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:

  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_DIR: omgg-backend
      REPO_URL: git@github.com:omgg-dev/omgg-backend.git
      CONTAINER_NAME: omgg-website-strapi
      APP_PORT: 1337
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Connect to ssh and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          debug: true
          script: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh

            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa

            ssh-keyscan github.com > ~/.ssh/known_hosts

            if [ ! -d "$PROJECT_DIR" ]; then
              echo "üìÅ Folder not found, cloning repository..."
              git clone $REPO_URL || { echo "Cloning failed"; exit 1; }
              cd $PROJECT_DIR
            else
              echo "üìÅ Folder found, pulling latest changes..."
              cd $PROJECT_DIR
              git pull origin main
            fi

            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            
            # Change the path in case the docker isn't at the root of the project
            # cd front-end

            # Stop and remove existing container if it exists
            docker ps -a -q --filter "name=$CONTAINER_NAME" | grep -q . && docker stop $CONTAINER_NAME && docker rm $CONTAINER_NAME
            
            # Build and run container
            docker build -t $CONTAINER_NAME .
            docker run -d -p $APP_PORT:$APP_PORT --name $CONTAINER_NAME $CONTAINER_NAME